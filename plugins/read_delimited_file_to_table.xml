<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <SourceProxy name="ReadDelimitedTextFileToTable" class="vtkPythonProgrammableFilter" label="Read Delimited Text File To Table">
      <Documentation
        long_help="This reader will take in any delimited text file and make a vtkTable from it. This is not much different than the default .txt or .csv reader in Paraview, however it gives us room to use our own extensions and a little more flexibility in the structure of the files we import."
        short_help="This reader will take in any delimited text file and make a vtkTable from it. This is not much different than the default .txt or .csv reader in Paraview, however it gives us room to use our own extensions and a little more flexibility in the structure of the files we import.">
      </Documentation>
        <Hints>
            <ShowInMenu category="CSM GP Readers" />
        </Hints>

<Hints>
    <ReaderFactory extensions="dat csv txt"
                   file_description="CSM GP Delimited Text File" />
</Hints>


            <StringVectorProperty
            panel_visibility="default"
            name="Delimiter_Field"
            label="Delimiter Field"
            initial_string="Delimiter_Field"
            command="SetParameter"
            animateable="1"
            default_values=" "
            number_of_elements="1">
            <Documentation></Documentation>
            </StringVectorProperty>


          <StringVectorProperty
            panel_visibility="default"
            name="FileName"
            label="FileName"
            initial_string="FileName"
            command="SetParameter"
            animateable="1"
            default_values="absolute_path"
            number_of_elements="1">
            <FileListDomain name="files"/>
            <Documentation></Documentation>
          </StringVectorProperty>


      <IntVectorProperty
        panel_visibility="default"
        name="Has_Titles"
        label="Has Titles"
        initial_string="Has_Titles"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>


      <IntVectorProperty
        panel_visibility="default"
        name="Number_Ignore_Lines"
        label="Number Ignore Lines"
        initial_string="Number_Ignore_Lines"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>


      <IntVectorProperty
        panel_visibility="default"
        name="Use_tab_delimiter"
        label="Use tab delimiter"
        initial_string="Use_tab_delimiter"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <!-- Output data type: "vtkTable" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="19"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="import numpy as np&#xA;import csv&#xA;from vtk.util import numpy_support&#xA;&#xA;pdo = self.GetOutput() # vtkTable&#xA;&#xA;if (Use_tab_delimiter):&#xA;    Delimiter_Field = '\t'&#xA;&#xA;titles = []&#xA;data = []&#xA;with open(FileName) as f:&#xA;    reader = csv.reader(f, delimiter=Delimiter_Field)&#xA;    # Skip header lines&#xA;    for i in range(Number_Ignore_Lines):&#xA;        reader.next()&#xA;    # Get titles&#xA;    if (Has_Titles):&#xA;        titles = reader.next()&#xA;    else:&#xA;        # Bulild arbitrary titles for length of first row&#xA;        row = reader.next()&#xA;        data.append(row)&#xA;        for i in range(len(row)):&#xA;            titles.append('Field' + str(i))&#xA;    # Read data&#xA;    for row in reader:&#xA;        data.append(row)&#xA;&#xA;# Put columns into table&#xA;for i in range(len(titles)):&#xA;    col = []&#xA;    for row in data:&#xA;        col.append(row[i])&#xA;    VTK_data = numpy_support.numpy_to_vtk(num_array=col, deep=True, array_type=vtk.VTK_FLOAT)&#xA;    VTK_data.SetName(titles[i])&#xA;    pdo.AddColumn(VTK_data)&#xA;"
        panel_visibility="advanced">
        <Hints>
         <Widget type="multi_line" syntax="python"/>
       </Hints>
      <Documentation>This property contains the text of a python program that
      the programmable source runs.</Documentation>
      </StringVectorProperty>


    </SourceProxy>
 </ProxyGroup>
</ServerManagerConfiguration>
